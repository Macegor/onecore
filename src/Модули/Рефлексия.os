
Перем Рефлектор;
Перем ТаблицаСвойств;

// Возвращает прочитанную таблицу свойств объекта
//
// Параметры:
//   Объект - Объект - Объект для получения данных
//   Аннотация - Строка - Имя аннотации по которой необходимо отфильтровать свойства
//
//  Возвращаемое значение:
//   ТаблицаЗначений - таблица содержащая экспортные свойства объекта, доступны следующие колонки
//    * Имя                  - Строка - имя свойства объекта
//    * Аннотации            - Неопределено, ТаблицаЗначений - Таблица аннотаций со следующими колонками
//       * Имя       - строка - имя аннотации
//       * Параметры - Неопределено, ТаблицаЗначений - таблица параметров аннотации
//          * Имя      - строка - имя параметра аннотации
//          * Значение - строка - значение параметра аннотации
//
Функция ПолучитьТаблицуСвойств(Объект, Аннотация = Неопределено) Экспорт

	ТаблицаСвойствОбъекта = Рефлектор.ПолучитьТаблицуСвойств(Объект, Истина);

	Если Аннотация <> Неопределено Тогда

		НоваяТаблицаСвойств = ТаблицаСвойств.Скопировать();

		Для каждого Элемент Из ТаблицаСвойствОбъекта Цикл

			Если Элемент.Аннотации = Неопределено Тогда
				Продолжить;
			КонецЕсли;
	
			Для Каждого ЭлементАннотации Из Элемент.Аннотации Цикл
				
				Если НРег(ЭлементАннотации.Имя) = НРег(Аннотация) Тогда
					НоваяСтрока = НоваяТаблицаСвойств.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
				КонецЕсли;
	
			КонецЦикла;
			
		КонецЦикла;

		Возврат НоваяТаблицаСвойств;
	
	Иначе

		Возврат ТаблицаСвойствОбъекта;

	КонецЕсли;

КонецФункции

Функция ПолучитьТаблицуМетодов(Объект, Аннотация = Неопределено) Экспорт

	ТаблицаМетодов = Рефлектор.ПолучитьТаблицуМетодов(Объект);

	Если Аннотация <> Неопределено Тогда
		ВозвращаемоеЗначение = ФильтроватьТаблицуПоАннотациям(ТаблицаМетодов, Аннотация);
	Иначе
		ВозвращаемоеЗначение = ТаблицаМетодов;
	КонецЕсли;

	Возврат ВозвращаемоеЗначение;

КонецФункции

// Устанавливает значение свойству объекта
//
// Параметры:
//	 Объект - Объект - Объект для получения данных
//   ИмяСвойства - Строка - Имя свойства
//   Значение - Произвольно - Присваемое значение
//
Процедура УстановитьСвойство(Объект, ИмяСвойства, Значение) Экспорт
	
	Попытка
		Рефлектор.УстановитьСвойство(Объект, ИмяСвойства, Значение);
	Исключение
		ВызватьИсключение СтрШаблон("У объекта %1 отсутствует свойство %2, значение не присвоено", Строка(Объект), ИмяСвойства);
	КонецПопытки;

КонецПроцедуры

// Получает значение свойства объекта
//
// Параметры:
//	 Объект - Объект - Объект для получения данных
//   ИмяСвойства - Строка - Имя свойства
//
//  Возвращаемое значение:
//   Произвольно - значение свойства
//
Функция ПолучитьСвойство(Объект, ИмяСвойства) Экспорт
	
	Попытка
		Возврат Рефлектор.ПолучитьСвойство(Объект, ИмяСвойства);
	Исключение
		Сообщить(ОписаниеОшибки());
		ВызватьИсключение СтрШаблон("У объекта %1 отсутствует свойство %2, значение не присвоено", Строка(Объект), ИмяСвойства);
	КонецПопытки;

КонецФункции

// Проверяет наличие свойства у объекта
//
// Параметры:
//	 Объект - Объект - Объект для получения данных
//   ИмяСвойства - Строка - Имя свойства
//
//  Возвращаемое значение:
//   Булево - наличие свойства
//
Функция СвойствоСуществует(Объект, ИмяСвойства) Экспорт
	
	ТаблицаСвойств = ПолучитьТаблицуСвойств(Объект);
	НайденныеСтроки = ТаблицаСвойств.НайтиСтроки(Новый Структура("Имя", ИмяСвойства));
	Возврат Булево(НайденныеСтроки.Количество());

КонецФункции

// Проверяет наличие указанного метода в объекте
//
// Параметры:
//	 Объект - Объект - Объект для получения данных
//   ИмяМетода - Строка - Имя метода
//
//  Возвращаемое значение:
//   Булево - Истина если метод существует в объекте
//
Функция МетодСуществует(Объект, ИмяМетода) Экспорт
	
	Возврат Рефлектор.МетодСуществует(Объект, ИмяМетода);

КонецФункции

// Вызывает метод объекта с проверкой его наличия
//
// Параметры:
//	 Объект - Объект - Объект для получения данных
//   ИмяМетода - Строка - Имя свойства
//	 Параметры - Массив - Параметры передаваемые в вызываемый метод, включая не обязательные
//
Функция ВызватьМетод(Объект, ИмяМетода, Параметры = Неопределено) Экспорт
	
	Если НЕ МетодСуществует(Объект, ИмяМетода) Тогда
		ВызватьИсключение СтрШаблон("В объекте %1 отсутствует метод %2", Строка(Объект), ИмяМетода);
	КонецЕсли;

	Возврат Рефлектор.ВызватьМетод(Объект, ИмяМетода, Параметры);

КонецФункции

Функция ФильтроватьТаблицуПоАннотациям(ТаблицаДанных, АннотацияФильтр)
	
	ОтфильтрованнаяТаблица = ТаблицаДанных.СкопироватьКолонки();

	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл

		Если СтрокаТаблицы.Аннотации = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Для Каждого Аннотация Из СтрокаТаблицы.Аннотации Цикл
			
			Если НРег(Аннотация.Имя) = Нрег(АннотацияФильтр) Тогда
				НоваяСтрока = ОтфильтрованнаяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			КонецЕсли;

		КонецЦикла;

	КонецЦикла;

	Возврат ОтфильтрованнаяТаблица;

КонецФункции

Рефлектор = Служебное.Рефлектор();

ТаблицаСвойств = Новый ТаблицаЗначений;
ТаблицаСвойств.Колонки.Добавить("Имя");
ТаблицаСвойств.Колонки.Добавить("Аннотации");