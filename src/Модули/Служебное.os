
Перем Рефлектор;
Перем КаталогБиблиотеки;
Перем КаталогПриложения;

Функция Рефлектор() Экспорт
	Возврат Рефлектор;
КонецФункции

Функция КаталогБиблиотеки() Экспорт
	Возврат КаталогБиблиотеки;
КонецФункции

Функция КаталогПриложения() Экспорт
	Возврат КаталогПриложения;
КонецФункции

Функция ПодготовитьКлючОбъекта(ФайлСкрипта, КорневойПуть) Экспорт

	ОбъектПриложения = СтрНачинаетсяС(ФайлСкрипта.ПолноеИмя, КаталогПриложения);

	Если ОбъектПриложения Тогда
		СтрокаКлюча = СтрЗаменить(ФайлСкрипта.ПолноеИмя, КаталогПриложения, "");
	Иначе
		СтрокаКлюча = СтрЗаменить(ФайлСкрипта.ПолноеИмя, КаталогБиблиотеки, "");
	КонецЕсли;

	Возврат СтрЗаменить(СтрЗаменить(СтрЗаменить(Прав(СтрокаКлюча, СтрДлина(СтрокаКлюча) - 1), ".os", ""), "/", "."), "\", ".");
	
КонецФункции

// Параметры:
//   Строка - Строка - Проверяемая строка
//   ДопустимыеСимволы - Массив - Массив допустимых кодов символов
//
// Возвращаемое значение:
//		Истина - строка состоит из допустимых символов
//		Ложь - в строке встречаются недопустимые символы
//
// Описание:
//		Строка проверяется на наличие только русских и латинских букв;
//		кроме того,	допускаются дефис, "Ё", "ё".
//
Функция СодержитНедопустимыеСимволы(Знач Строка, Знач ДопустимыеСимволы) Экспорт
	
	Строка = СокрЛП(Строка);
	КоличествоСимволов = СтрДлина(Строка);
	
	Если КоличествоСимволов = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Сч = 1 По КоличествоСимволов Цикл
		Символ = Сред(Строка, Сч, 1);
		Если ДопустимыеСимволы.Найти(Символ) = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Проверяет содержит ли строка хотя бы один символ кириллицы
//
// Параметры:
//   Строка - Строка - Проверяемая строка
//
// Возвращаемое значение:
//   Булево - Истина, если строка содержит хотя бы один символ кириллицы,
//           Ложь - в противном случае
//
Функция СодержитСимволыКириллицы(Знач Строка) Экспорт
	
	ДопустимыеСимволы = ДопустимыеСимволы(Истина, Ложь, Истина, Истина);

	Возврат СодержитНедопустимыеСимволы(Строка, ДопустимыеСимволы);
	
КонецФункции

// Проверяет соответствует ли строка CamelCase нотации с допустимыми символами// 
// Параметры:
//   Строка - Строка - Проверяемая строка
//   ДопуститьКириллицу - Булево - Если Истина, то допускаются символы кириллицы. По умолчанию Ложь
//
// Возвращаемое значение:
//   Булево - Истина, если строка соответствует CamelCase нотации
//
Функция СоответствуетCamelCase(Знач Строка, Знач ДопуститьКириллицу = Ложь) Экспорт
	
	// Проверяем что строка не пустая
	Если ПустаяСтрока(Строка) Тогда
		Возврат Ложь;
	КонецЕсли;

	// Формируем массив допустимых символов
	ДопустимыеСимволы = ДопустимыеСимволы(Истина, ДопуститьКириллицу, Истина);
	
	// Проверяем на недопустимые символы
	Если СодержитНедопустимыеСимволы(Строка, ДопустимыеСимволы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Первый символ не должен быть цифрой
	ДопустимыеСимволы = ДопустимыеСимволы(Истина, ДопуститьКириллицу);

	Если СодержитНедопустимыеСимволы(Сред(Строка, 1, 1), ДопустимыеСимволы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Функция возвращает массив допустимых символов для проверки строки
// 
// Параметры:
//   ДопуститьЛатицицу  - Булево - Разрешить использование латинских символов
//   ДопуститьКириллицу  - Булево - Разрешить использование кириллических символов
//   ДопуститьЦифры      - Булево - Разрешить использование цифр
//   ДопуститьСпецсимволы - Булево - Разрешить использование специальных символов
//
// Возвращаемое значение:
//   Массив - Массив допустимых символов
//
Функция ДопустимыеСимволы(ДопуститьЛатицицу = Истина, ДопуститьКириллицу = Ложь, ДопуститьЦифры = Ложь, ДопуститьСпецсимволы = Ложь) Экспорт
    
    ДопустимыеСимволы = Новый Массив;
    
    // Добавляем латинские буквы
	Если ДопуститьЛатицицу Тогда

		ЛатинскиеБуквы = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

		Для Сч = 1 По СтрДлина(ЛатинскиеБуквы) Цикл
			ДопустимыеСимволы.Добавить(Сред(ЛатинскиеБуквы, Сч, 1));
		КонецЦикла;

	КонецЕсли;
	
	// Добавляем русские буквы
    Если ДопуститьКириллицу Тогда

		КириллическиеБуквы = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя";

		Для Сч = 1 По СтрДлина(КириллическиеБуквы) Цикл
			ДопустимыеСимволы.Добавить(Сред(КириллическиеБуквы, Сч, 1));
		КонецЦикла;

    КонецЕсли;
    
	// Добавляем цифры
    Если ДопуститьЦифры Тогда
        
		Цифры = "0123456789";

		Для Сч = 1 По СтрДлина(Цифры) Цикл
			ДопустимыеСимволы.Добавить(Сред(Цифры, Сч, 1));
		КонецЦикла;

    КонецЕсли;

    // Добавляем спецсимволы
    Если ДопуститьСпецсимволы Тогда
        
        Спецсимволы = "!@#$%^&*()_+-=[]{}|;:,.<>?/~`'""";

        Для Сч = 1 По СтрДлина(Спецсимволы) Цикл
            ДопустимыеСимволы.Добавить(Сред(Спецсимволы, Сч, 1));
        КонецЦикла;

    КонецЕсли;
    
    Возврат ДопустимыеСимволы;
    
КонецФункции

Рефлектор = Новый Рефлектор();
ТекущийСценарий = ТекущийСценарий();
КаталогБиблиотеки = Лев(ТекущийСценарий.Каталог, СтрНайти(ТекущийСценарий.Каталог, "onecore", НаправлениеПоиска.СКонца) - 1) + "onecore";
КаталогПриложения = ТекущийКаталог();