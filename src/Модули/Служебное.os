
Перем Рефлектор;
Перем КаталогБиблиотеки;
Перем КаталогПриложения;

Функция Рефлектор() Экспорт
	Возврат Рефлектор;
КонецФункции

Функция КаталогБиблиотеки() Экспорт
	Возврат КаталогБиблиотеки;
КонецФункции

Функция КаталогПриложения() Экспорт
	Возврат КаталогПриложения;
КонецФункции

Функция ПодготовитьКлючОбъекта(ФайлСкрипта, КорневойПуть) Экспорт

	ОбъектПриложения = СтрНачинаетсяС(ФайлСкрипта.ПолноеИмя, КаталогПриложения);

	Если ОбъектПриложения Тогда
		СтрокаКлюча = СтрЗаменить(ФайлСкрипта.ПолноеИмя, КаталогПриложения, "");
	Иначе
		СтрокаКлюча = СтрЗаменить(ФайлСкрипта.ПолноеИмя, КаталогБиблиотеки, "");
	КонецЕсли;

	Возврат СтрЗаменить(СтрЗаменить(СтрЗаменить(Прав(СтрокаКлюча, СтрДлина(СтрокаКлюча) - 1), ".os", ""), "/", "."), "\", ".");
	
КонецФункции

// Параметры:
// СтрокаПараметр - строка, проверяемая строка.
//
// Возвращаемое значение:
//		Истина - строка состоит из допустимых символов
//		Ложь - в строке встречаются недопустимые символы
//
// Описание:
//		Строка проверяется на наличие только русских и латинских букв;
//		кроме того,	допускаются дефис, "Ё", "ё".
//
Функция СтрокаНаписанаРусскимиИлиЛатинскими(Знач СтрокаПараметр)
	
	СтрокаПараметр = СокрЛП(СтрокаПараметр);
	
	КоличествоСимволов = СтрДлина(СтрокаПараметр);
	
	Если КоличествоСимволов > 0 Тогда
		
		ПервыйСимвол = КодСимвола(Лев(СтрокаПараметр, 1));

		Русские = (ПервыйСимвол >= 192) ИЛИ (ПервыйСимвол = 184) ИЛИ (ПервыйСимвол = 168);
		
		СписокДопустимыхЗначений = Новый Соответствие;

		СписокДопустимыхЗначений.Вставить(184, Истина); // ё

		СписокДопустимыхЗначений.Вставить(168, Истина); // Ё

		СписокДопустимыхЗначений.Вставить(45, Истина); // "-"

		Для Сч = 1 По КоличествоСимволов Цикл
			
			Код = КодСимвола(Сред(СтрокаПараметр, Сч));
			
			// Большие латинские буквы: 65 - 90
			// Маленькие латинские буквы: 97 - 122
			// Русские буквы: 192 и больше
			
			//русские:
			Если Русские Тогда
				
				Если (СписокДопустимыхЗначений[Код] = Неопределено) И (Код < 192) Тогда
					Возврат Ложь;
				КонецЕсли;
				
				// латинские:
				
			ИначеЕсли (Код <> 45) И ((Код < 65) ИЛИ (Код > 90) И (Код < 97) ИЛИ (Код > 122)) Тогда
				Возврат Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Истина;
		
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Рефлектор = Новый Рефлектор();
ТекущийСценарий = ТекущийСценарий();
КаталогБиблиотеки = Лев(ТекущийСценарий.Каталог, СтрНайти(ТекущийСценарий.Каталог, "onecore", НаправлениеПоиска.СКонца) - 1) + "onecore";
КаталогПриложения = ТекущийКаталог();