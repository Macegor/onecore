// BSLLS:MagicNumber-off

#Использовать logos
#Использовать coloratos

Перем ЛогФреймворка;
Перем УровниПриоритета;
Перем МинимальныйУровеньВывода;

// Устанавливает минимально выводимый в консоль лог
//
// Параметры:
//	Уровень - Строка - Доступные варианты: "Отладка", "Информация", "Предупреждение", "Ошибка", "КритичнаяОшибка"
Процедура Инициализировать(Уровень = "Информация") Экспорт
	
	МинимальныйУровеньВывода = УровеньЛогаПоИмени(Уровень);

	Если МинимальныйУровеньВывода = Неопределено Тогда
		МинимальныйУровеньВывода = 1;
	КонецЕсли;

	ЛогФреймворка.УстановитьУровень(МинимальныйУровеньВывода);
	ЛогФреймворка.УстановитьРаскладку(ЭтотОбъект);

КонецПроцедуры

Процедура Отладка(Сообщение) Экспорт
	// ЛогФреймворка.Отладка(Сообщение);
	ВывестиЛогВКонсоль(0, Сообщение);
КонецПроцедуры

Процедура Информация(Сообщение) Экспорт
	// ЛогФреймворка.Информация(Сообщение);
	ВывестиЛогВКонсоль(1, Сообщение);
КонецПроцедуры

Процедура Предупреждение(Сообщение) Экспорт
	// ЛогФреймворка.Предупреждение(Сообщение);
	ВывестиЛогВКонсоль(2, Сообщение);
КонецПроцедуры

Процедура Ошибка(Сообщение) Экспорт
	// ЛогФреймворка.Ошибка(Сообщение);
	ВывестиЛогВКонсоль(3, Сообщение);
КонецПроцедуры

Процедура КритичнаяОшибка(Сообщение) Экспорт
	// ЛогФреймворка.КритичнаяОшибка(Сообщение);
	ВывестиЛогВКонсоль(4, Сообщение);
КонецПроцедуры

Процедура ВывестиЛогВКонсоль(Уровень, Сообщение)

	Если Уровень < МинимальныйУровеньВывода Тогда
		Возврат;
	КонецЕсли;

	ДатаСобытия = ТекущаяДата();
	ПараметрыЛога = ПараметрыЛогаПоУровню(Уровень);
	ФорматированноеСообщение = СтрШаблон("([%1][%2]: %3|#color=%4)", Формат(ДатаСобытия, "ДФ='HH:mm:ss'"), ПараметрыЛога.Имя, Сообщение, ПараметрыЛога.Цвет);
	ЦветнойВывод.ВывестиСтроку(ФорматированноеСообщение);
	
КонецПроцедуры

Функция ПолучитьФорматированноеСообщение(Знач СобытиеЛога) Экспорт
   
	// СобытиеЛога - Объект с методами
	//   * ПолучитьУровень() - Число - уровень лога
	//   * ПолучитьСообщение() - Строка - текст сообщения
	//   * ПолучитьИмяЛога() - Строка - имя лога
	//   * ПолучитьВремяСобытия() - Число - Универсальная дата-время события в миллисекундах
	//   * ПолучитьДополнительныеПоля() - Соответствие - дополнительные поля события

	ДатаСобытия = ТекущаяДата();
	ТекстСобытия = СобытиеЛога.ПолучитьСообщение();
	ПредставлениеУровня = ТРег(УровниЛога.НаименованиеУровня(СобытиеЛога.ПолучитьУровень()));
	ФорматированноеСообщение = СтрШаблон("[%1][%2]: %3", Формат(ДатаСобытия, "ДФ='HH:mm:ss'"), ПредставлениеУровня, ТекстСобытия);
 
	Возврат ФорматированноеСообщение;
 
 КонецФункции

 Функция УровеньЛогаПоИмени(ИмяЛога)

	УровниПриоритетаПоИмени = Новый Соответствие();
	УровниПриоритетаПоИмени.Вставить("Отладка"        , 0);
	УровниПриоритетаПоИмени.Вставить("Информация"     , 1);
	УровниПриоритетаПоИмени.Вставить("Предупреждение" , 2);
	УровниПриоритетаПоИмени.Вставить("Ошибка"         , 3);
	УровниПриоритетаПоИмени.Вставить("КритичнаяОшибка", 4);

	Возврат УровниПриоритетаПоИмени[ИмяЛога];

 КонецФункции

 Функция ПараметрыЛогаПоУровню(Уровень)

	Возврат УровниПриоритета[Уровень];

 КонецФункции

ЛогФреймворка = Логирование.ПолучитьЛог("onecore.app.message");

УровниПриоритета = Новый Соответствие();
УровниПриоритета.Вставить(0, Новый Структура("Имя, Цвет", "Отладка", "Серый"));
УровниПриоритета.Вставить(1, Новый Структура("Имя, Цвет", "Информация", "Синий"));
УровниПриоритета.Вставить(2, Новый Структура("Имя, Цвет", "Предупреждение", "Желтый"));
УровниПриоритета.Вставить(3, Новый Структура("Имя, Цвет", "Ошибка", "Красный"));
УровниПриоритета.Вставить(4, Новый Структура("Имя, Цвет", "КритичнаяОшибка", "Малиновый"));