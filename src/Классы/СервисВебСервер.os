// Номер порта, который будет прослушивать TCPСервер
Перем ПортПрослушивания;

// Объект управляющий маршрутизацией запросов
Перем Маршрутизатор;

// Создаёт экземпляр web сервера
//
// Параметры:
//   Порт - Число - Порт запуска веб сервера
//
Процедура ПриСозданииОбъекта(Порт = 5555)
	
	ПортПрослушивания = Порт;
	
КонецПроцедуры

// Выпоняет запуск web сервера и ожидает соединения, блокирует поток выполнения
//
// Параметры:
//   ФоноваяОбработка - Булево - Если Истина тогда обработка соединений будет происходить в фоновом задании
//
Процедура Запустить(ФоноваяОбработка = Истина) Экспорт
	
	Маршрутизатор = Новый Маршрутизатор();
	ВебСервер = Новый ВебСервер(ПортПрослушивания);
	
	ВебСервер.ДобавитьОбработчикЗапросов(ЭтотОбъект, "ОбработатьЗапрос");
	// ВебСервер.ИспользоватьСтатическиеФайлы();
	// ВебСервер.УстановитьКорневойПутьСодержимого("");
	
	Лог.Информация("Сервер будет запущен по адресу: http://127.0.0.1:" + Строка(ПортПрослушивания)); // BSLLS:UsingHardcodeNetworkAddress-off
	
	ВебСервер.Запустить();
	
КонецПроцедуры

Процедура ОбработатьЗапрос(Контекст, СледующийОбработчик) Экспорт
	
	Попытка
		
		МенеджерОбъектов = Приложение.МенеджерОбъектов();
		Перехватчики = МенеджерОбъектов.КлючиПерехватчиков();
		ОбъектыПерехватчиков = Новый Массив();
		
		Для Каждого КлючПерехватчика Из Перехватчики Цикл
			ОбъектыПерехватчиков.Добавить(МенеджерОбъектов.СоздатьОбъект(КлючПерехватчика));
		КонецЦикла;
		
		ПрерватьОбработку = Ложь;

		ВызватьМетодПерехватчиков(ОбъектыПерехватчиков, "ПередВыполнениемПредставления", Контекст, ПрерватьОбработку);

		Если НЕ ПрерватьОбработку Тогда
			Маршрутизатор.ПеренаправитьВыполнение(Контекст);	
		КонецЕсли;

		ВызватьМетодПерехватчиков(ОбъектыПерехватчиков, "ПослеВыполненияПредставления", Контекст, ПрерватьОбработку);
		
	Исключение
		
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СтруктураОтвета = Новый Структура("massage", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Лог.Ошибка("Ошибка при выполнении обработчика соединения: " + ПредставлениеОшибки);
		
		Если Настройки.Получить("Приложение.РежимРазработки") Тогда
			СтруктураОтвета.Вставить("full_error", ПредставлениеОшибки);
		КонецЕсли;
		
		ТестОшибки = Сериализация.СериализоватьJSON(СтруктураОтвета);
		Контекст.Ответ.ТипКонтента = "json";
		Контекст.Ответ.КодСостояния = 500;
		Контекст.Ответ.ЗаписатьКакJSON(ТестОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ВызватьМетодПерехватчиков(ОбъектыПерехватчиков, ИмяМетода, Контекст, ПрерватьОбработку)
	
	Запрос = Контекст.Запрос;
	Ответ = Контекст.Ответ;
	
	МассивПараметровВызова = Новый Массив();
	МассивПараметровВызова.Добавить(Запрос);
	МассивПараметровВызова.Добавить(Ответ);
	МассивПараметровВызова.Добавить(Истина);
	
	Для Каждого ОбъектПерехватчика Из ОбъектыПерехватчиков Цикл
		
		Если МассивПараметровВызова[2] Тогда
			Если Рефлексия.МетодСуществует(ОбъектПерехватчика, ИмяМетода) Тогда
				Попытка
					Рефлексия.ВызватьМетод(ОбъектПерехватчика, ИмяМетода, МассивПараметровВызова);
					ПрерватьОбработку = НЕ МассивПараметровВызова[2];
				Исключение
					Лог.Предупреждение(СтрШаблон("Метод ""%1"" объекта перехватчика ""%2"" не выполнен, по причине: %3",
					ИмяМетода, Строка(ОбъектПерехватчика), ОписаниеОшибки()));
				КонецПопытки;
			КонецЕсли;
		Иначе
			ПрерватьОбработку = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры