#Использовать fs

Перем Имя;
Перем ИмяЛатинское;
Перем ПутьКомпонента;
Перем МодульКомпонента;
Перем МоделиКомпонента;

Процедура ПриСозданииОбъекта(ИмяКомпонента, ИмяКомпонентаЛатинское, Отказ = Ложь)

	Имя = ИмяКомпонента;
	ИмяЛатинское = ИмяКомпонентаЛатинское;
	КаталогПриложения = Служебное.КаталогПриложения();
	ПутьКомпонента = ОбъединитьПути(КаталогПриложения, ИмяКомпонента);
	ИмяМетодаИнициализации = "ПриИнициализацииКомпонента";
	МоделиКомпонента = Новый Соответствие();
	МенеджерОбъектов = Приложение.МенеджерОбъектов();
	
	Если НЕ ФС.КаталогСуществует(ПутьКомпонента) Тогда
		Лог.Отладка(СтрШаблон("Компонент ""%1"" не найден по пути: %2", ИмяКомпонента, ПутьКомпонента));
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПутьСценарияКомпонента = ОбъединитьПути(ПутьКомпонента, "МодульКомпонента.os");

	Если НЕ ФС.Существует(ПутьСценарияКомпонента) Тогда
		Лог.Отладка(СтрШаблон("В компоненте ""%1"" не найден модуль компонента по пути: %2", ИмяКомпонента, ПутьСценарияКомпонента));
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПодключитьМоделиКомпонента();
	ПодключитьПредставленияКомпонента();
	ПодключитьСервисыКомпонента();

	МодульКомпонента = ЗагрузитьСценарий(ПутьСценарияКомпонента);
	МенеджерОбъектов.ПодключитьСервисыКОбъекту(МодульКомпонента, Имя);

	Если Рефлексия.МетодСуществует(МодульКомпонента, ИмяМетодаИнициализации) Тогда
		Рефлексия.ВызватьМетод(МодульКомпонента, ИмяМетодаИнициализации);
	КонецЕсли;

КонецПроцедуры

Функция Имя() Экспорт
	Возврат Имя;
КонецФункции

Функция ИмяЛатинское() Экспорт
	Возврат ИмяЛатинское;
КонецФункции

Функция МодульКомпонента() Экспорт
	Возврат МодульКомпонента;
КонецФункции

Функция МоделиКомпонента() Экспорт
	Возврат МоделиКомпонента;
КонецФункции

Процедура ПодключитьМоделиКомпонента()

	Лог.Отладка(СтрШаблон("Подключение моделей компонента %1", Имя));

	МенеджерОбъектов = Приложение.МенеджерОбъектов();
	ПутьКМоделям = ОбъединитьПути(ПутьКомпонента, "Модели");

	Если НЕ ФС.КаталогСуществует(ПутьКМоделям) Тогда
		Лог.Предупреждение(СтрШаблон("В компоненте ""%1"" отсутствует каталог с моделями", Имя));
		Возврат;
	КонецЕсли;

	ФайлыМоделей = НайтиФайлы(ПутьКМоделям, "*.os", Истина);

	Если НЕ ФайлыМоделей.Количество() Тогда
		Лог.Предупреждение(СтрШаблон("В компоненте ""%1"" отсутствуют модели", Имя));
	КонецЕсли;

	Для каждого Файл Из ФайлыМоделей Цикл

		Отказ = Ложь;
		КлючОбъекта = Служебное.ПодготовитьКлючОбъекта(Файл, ПутьКМоделям);
		МенеджерОбъектов.ЗарегистрироватьОбъект(Файл.ПолноеИмя, КлючОбъекта, Истина, Отказ);
		ВременныйОбъектМодели = МенеджерОбъектов.СоздатьОбъект(КлючОбъекта);

		Если НЕ Отказ И ОбъектСоответствуетМодели(ВременныйОбъектМодели) Тогда
			МоделиКомпонента.Вставить(КлючОбъекта, МенеджерОбъектов.ТипПоКлючу(КлючОбъекта));
			Лог.Отладка(СтрШаблон("Модель по ключу %1 успешно подключена", КлючОбъекта));
		Иначе
			Лог.Предупреждение(СтрШаблон("Модель по ключу %1 не прошла проверку и не будет использована, проверьте правильность модели", КлючОбъекта));
		КонецЕсли;

		ОсвободитьОбъект(ВременныйОбъектМодели);

	КонецЦикла;

КонецПроцедуры

Процедура ПодключитьПредставленияКомпонента()
	
	Лог.Отладка(СтрШаблон("Подключение представлений компонента %1", Имя));

	МенеджерОбъектов = Приложение.МенеджерОбъектов();
	ПутьКПредставлениям = ОбъединитьПути(ПутьКомпонента, "Представления");

	Если НЕ ФС.КаталогСуществует(ПутьКПредставлениям) Тогда
		Лог.Отладка(СтрШаблон("В компоненте ""%1"" отсутствует каталог с представлениями", Имя));
		Возврат;
	КонецЕсли;

	ФайлыПредставлений = НайтиФайлы(ПутьКПредставлениям, "*.os", Истина);

	Если НЕ ФайлыПредставлений.Количество() Тогда
		Лог.Отладка(СтрШаблон("В компоненте ""%1"" отсутствуют представления", Имя));
	КонецЕсли;

	Для каждого Файл Из ФайлыПредставлений Цикл
		КлючОбъекта = Служебное.ПодготовитьКлючОбъекта(Файл, ПутьКПредставлениям);
		МенеджерОбъектов.ЗарегистрироватьОбъект(Файл.ПолноеИмя, КлючОбъекта);
		Лог.Отладка(СтрШаблон("Загружено представление ""%1""", Файл.ИмяБезРасширения));
	КонецЦикла;

КонецПроцедуры

Процедура ПодключитьСервисыКомпонента()
	
	Лог.Отладка(СтрШаблон("Подключение сервисов компонента %1", Имя));

	МенеджерОбъектов = Приложение.МенеджерОбъектов();
	ПутьКСервисам = ОбъединитьПути(ПутьКомпонента, "Сервисы");

	Если НЕ ФС.КаталогСуществует(ПутьКСервисам) Тогда
		Лог.Отладка(СтрШаблон("В компоненте ""%1"" отсутствует каталог с сервисами", Имя));
		Возврат;
	КонецЕсли;

	ФайлыСервисов = НайтиФайлы(ПутьКСервисам, "*.os", Истина);

	Если НЕ ФайлыСервисов.Количество() Тогда
		Лог.Отладка(СтрШаблон("В компоненте ""%1"" отсутствуют сервисы", Имя));
	КонецЕсли;

	Для каждого Файл Из ФайлыСервисов Цикл
		КлючОбъекта = Служебное.ПодготовитьКлючОбъекта(Файл, ПутьКСервисам);
		МенеджерОбъектов.ЗарегистрироватьОбъект(Файл.ПолноеИмя, КлючОбъекта);
		Лог.Отладка(СтрШаблон("Загружен сервис ""%1""", Файл.ИмяБезРасширения));
	КонецЦикла;

КонецПроцедуры

Функция ОбъектСоответствуетМодели(Объект)
	
	ТаблицаМетодов = Рефлексия.ПолучитьТаблицуМетодов(Объект, "Сущность");
	ТаблицаСвойств = Рефлексия.ПолучитьТаблицуСвойств(Объект);
	ЕстьКолонкаИдентификатор = Ложь;

	Если НЕ ТаблицаМетодов.Количество() ИЛИ НЕ ТаблицаСвойств.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;

	НайденныеСтроки = ТаблицаМетодов.НайтиСтроки(Новый Структура("Имя", "ПриСозданииОбъекта"));

	Если НЕ НайденныеСтроки.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;

	Для каждого СтрокаСвойства Из ТаблицаСвойств Цикл

		Если НЕ СтрокаСвойства.Экспорт Тогда
			Продолжить;
		КонецЕсли;

		АннотацииСвойства = Рефлексия.АннотацииСвойства(Объект, СтрокаСвойства.Имя);

		Если АннотацииСвойства.Свойство("Идентификатор") Тогда
			ЕстьКолонкаИдентификатор = Истина;
		КонецЕсли;

		Если НЕ АннотацииСвойства.Свойство("Колонка") Тогда
			Возврат Ложь;
		КонецЕсли;

		Если ТипЗнч(АннотацииСвойства.Колонка) <> Тип("Структура") Тогда
			Возврат Ложь;
		КонецЕсли;

		Если НЕ АннотацииСвойства.Колонка.Свойство("Тип") ИЛИ НЕ АннотацииСвойства.Колонка.Свойство("Имя") Тогда
			Возврат Ложь;
		КонецЕсли;

	КонецЦикла;

	Если НЕ ЕстьКолонкаИдентификатор Тогда
		Возврат Ложь;
	КонецЕсли;

	АннотацииМетода = Рефлексия.АннотацииМетода(Объект, НайденныеСтроки[0].Имя);

	Если ТипЗнч(АннотацииМетода.Сущность) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;

	Если НЕ АннотацииМетода.Сущность.Свойство("ИмяТаблицы") Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции