
Перем ЭлементыОтбора;

Процедура ПриСозданииОбъекта()
    ЭлементыОтбора = Новый ТаблицаЗначений;
    ЭлементыОтбора.Колонки.Добавить("Элемент");
    ЭлементыОтбора.Колонки.Добавить("ТипЧастиОтбора");
КонецПроцедуры

Функция Свойство(Свойство) Экспорт
	ДобавитьЭлементОтбора(Свойство, ТипыЧастейОтбора.Свойство);
	Возврат ЭтотОбъект;
КонецФункции

Функция Равно(Значение = Неопределено) Экспорт

	ДобавитьЛогическийЭлементОтбора("eq", Значение);
	Возврат ЭтотОбъект;

КонецФункции

Функция НеРавно(Значение = Неопределено) Экспорт

	ДобавитьЛогическийЭлементОтбора("ne", Значение);
	Возврат ЭтотОбъект;

КонецФункции

Функция Больше(Значение = Неопределено) Экспорт

	ДобавитьЛогическийЭлементОтбора("gt", Значение);
	Возврат ЭтотОбъект;

КонецФункции

Функция БольшеИлиРавно(Значение = Неопределено) Экспорт

	ДобавитьЛогическийЭлементОтбора("ge", Значение);
	Возврат ЭтотОбъект;

КонецФункции

Функция Меньше(Значение = Неопределено) Экспорт

	ДобавитьЛогическийЭлементОтбора("lt", Значение);
	Возврат ЭтотОбъект;

КонецФункции

Функция МеньшеИлиРавно(Значение = Неопределено) Экспорт

	ДобавитьЛогическийЭлементОтбора("le", Значение);
	Возврат ЭтотОбъект;

КонецФункции

Функция _И() Экспорт

	ДобавитьЛогическийЭлементОтбора("end");
	Возврат ЭтотОбъект;

КонецФункции

Функция _ИЛИ() Экспорт

	ДобавитьЛогическийЭлементОтбора("or");
	Возврат ЭтотОбъект;

КонецФункции

Функция _НЕ() Экспорт

	ДобавитьЛогическийЭлементОтбора("not");
	Возврат ЭтотОбъект;

КонецФункции

Процедура ДобавитьЛогическийЭлементОтбора(ЛогическаяОперация, Значение = Неопределено)

	ДобавитьЭлементОтбора(ЛогическаяОперация, ТипыЧастейОтбора.Операция);

	Если Значение <> Неопределено Тогда
		ДобавитьЭлементОтбора(Значение, ТипыЧастейОтбора.Значение);
	КонецЕсли;

КонецПроцедуры

// Добавляет новый элемент отбора
//
// Параметры:
//  Элемент - Строка, ГруппаОтбораКоннектора1С - Имя поля для отбора
//  ТипЧастиОтбора - ТипЧастиОтбора
//
Процедура ДобавитьЭлементОтбора(Элемент, ТипЧастиОтбора)

    НовыйЭлемент = ЭлементыОтбора.Добавить();
    НовыйЭлемент.Элемент = Элемент;
    НовыйЭлемент.ТипЧастиОтбора = ТипЧастиОтбора;

КонецПроцедуры

// Формирует строку запроса на основе элементов отбора
//
// Возвращаемое значение:
//   Строка - Сформированная строка запроса
//
Функция СформироватьСтрокуЗапроса() Экспорт

    СтрокаЗапроса = "";
    
    Для Каждого Элемент Из ЭлементыОтбора Цикл

        Если СтрокаЗапроса <> "" Тогда
            СтрокаЗапроса = СтрокаЗапроса + " ";
        КонецЕсли;
        
		Значение = Элемент.Элемент;

		Если Элемент.ТипЧастиОтбора = ТипыЧастейОтбора.Значение Тогда

			Если ТипЗнч(Значение) = Тип("Строка") Тогда
				СтрокаЗапроса = СтрокаЗапроса + "'" + Значение + "'";
			ИначеЕсли ТипЗнч(Значение) = Тип("Булево") Тогда
				СтрокаЗапроса = СтрокаЗапроса + ?(Значение, "true", "false");
			Иначе
				СтрокаЗапроса = СтрокаЗапроса + Строка(Значение);
			КонецЕсли;

		ИначеЕсли Элемент.ТипЧастиОтбора = ТипыЧастейОтбора.Свойство 
			ИЛИ Элемент.ТипЧастиОтбора = ТипыЧастейОтбора.Операция Тогда
			СтрокаЗапроса = СтрокаЗапроса + Значение;
		КонецЕсли; // BSLLS:IfElseIfEndsWithElse-off

    КонецЦикла;
    
    Возврат СтрокаЗапроса;

КонецФункции