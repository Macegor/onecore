#Использовать fs

Перем Маршруты;

Процедура ПриСозданииОбъекта()
	
	Маршруты = Новый Маршруты();
	СформироватьМаршруты();

КонецПроцедуры

Процедура СформироватьМаршруты()

	ПроцедураФормированияМаршрутов = "ПриФормированииМаршрутов";
	МенеджерКомпонентов = Приложение.МенеджерКомпонентов();
	Компоненты = МенеджерКомпонентов.Компоненты();
	КомпонентКорняСтатическихФайлов = МенеджерКомпонентов.КомпонентКорняСтатическихФайлов();
	КаталогПриложения = Служебное.КаталогПриложения();

	Для каждого Компонент Из Компоненты Цикл
		
		МодульКомпонента = Компонент.МодульКомпонента();
		ИмяКомпонента = Компонент.Имя();
		ИмяКомпонентаЛатинское = Компонент.ИмяЛатинское();
		ПутьКомпонента = ОбъединитьПути(КаталогПриложения, ИмяКомпонента);

		Лог.Отладка("Формирование маршрутов компонента " + ИмяКомпонента);

		Если НЕ Рефлексия.МетодСуществует(МодульКомпонента, ПроцедураФормированияМаршрутов) Тогда
			Лог.Предупреждение("Отсутствует процедура формирования маршрутов");
			Продолжить;
		КонецЕсли;

		МаршрутыКомпонента = Новый Маршруты(Компонент);

		МассивПараметров = Новый Массив();
		МассивПараметров.Добавить(МаршрутыКомпонента);

		Рефлексия.ВызватьМетод(МодульКомпонента, ПроцедураФормированияМаршрутов, МассивПараметров);

		// Автодобавление маршрутов статических файлов
		ПутьКРесурсам = ОбъединитьПути(ПутьКомпонента, "Ресурсы");

		Если НЕ ФС.КаталогСуществует(ПутьКРесурсам) Тогда
			Лог.Отладка(СтрШаблон("В компоненте ""%1"" отсутствует каталог с ресурсам", ИмяКомпонента));
			Возврат;
		КонецЕсли;

		ФайлыРесурсов = НайтиФайлы(ПутьКРесурсам, "*.*", Истина);

		Для каждого ФайлРесурса Из ФайлыРесурсов Цикл

			ОтносительныйПуть = СтрЗаменить(ФайлРесурса.ПолноеИмя, КаталогПриложения, "");
			ОтносительныйПуть = Прав(ОтносительныйПуть, СтрДлина(ОтносительныйПуть) - 1);
			ПутьБезКомпонента = Прав(ОтносительныйПуть, СтрДлина(ОтносительныйПуть) - СтрДлина(ИмяКомпонента));

			Если Компонент = КомпонентКорняСтатическихФайлов Тогда
				ПутьОтКорня = СтрЗаменить(ПутьБезКомпонента, "Ресурсы", "");
				ПутьОтКорня = СтрЗаменить(Прав(ПутьОтКорня, СтрДлина(ПутьОтКорня) - 1), "\", "/");
				МаршрутыКомпонента.Добавить(ПутьОтКорня, ФайлРесурса.ПолноеИмя, Истина);
			КонецЕсли;

			ПутьОтКомпонента = СтрЗаменить(СтрЗаменить(ПутьБезКомпонента, "Ресурсы", ИмяКомпонентаЛатинское), "\", "/");
			МаршрутыКомпонента.Добавить(ПутьОтКомпонента, ФайлРесурса.ПолноеИмя, Истина);

		КонецЦикла;

		Для каждого ДанныеМаршрута Из МаршрутыКомпонента.СписокМаршрутов() Цикл
			Маршруты.Добавить(ДанныеМаршрута.Адрес, ДанныеМаршрута.КлючОбъекта, ДанныеМаршрута.Статический);
		КонецЦикла;	

		ОсвободитьОбъект(МаршрутыКомпонента);

	КонецЦикла;

КонецПроцедуры

Процедура ПеренаправитьВыполнение(Запрос, Ответ) Экспорт
	
	Ответ.УстановитьКодСостояния(200);

	ТипЗапроса = Запрос.ТипЗапроса();

	Попытка

		Адрес = Запрос.Адрес();
		ДанныеМаршрута = Маршруты.НайтиМаршрут(Адрес);

		Если ДанныеМаршрута = Неопределено Тогда
			Ответ.УстановитьКодСостояния(404);
			Возврат;
		КонецЕсли;

		Если ДанныеМаршрута.Статический Тогда

			ПутьКФайлу = ДанныеМаршрута.КлючОбъекта;
			Файл = Новый Файл(ПутьКФайлу);

			Если НЕ Файл.Существует() Тогда
				Ответ.УстановитьКодСостояния(404);
			Иначе
				РасширениеБезТочки = Файл.Расширение;
				Ответ.УстановитьТипСодержимого(РасширениеБезТочки);
				Ответ.УстановитьТелоКакДвоичныеДанные(Новый ДвоичныеДанные(ПутьКФайлу));
			КонецЕсли;

			Возврат;

		КонецЕсли;

		МенеджерОбъектов = Приложение.МенеджерОбъектов();

		ЗначенияСвойствОбъекта = Новый Структура("Запрос, Ответ, Контекст", Запрос, Ответ, Неопределено);
		ИсполняемыйОбъект = МенеджерОбъектов.СоздатьОбъект(ДанныеМаршрута.КлючОбъекта, Неопределено, ЗначенияСвойствОбъекта);

		Если ИсполняемыйОбъект = Неопределено Тогда
			Ответ.УстановитьКодСостояния(500);
			СтруктураОтвета = Новый Структура("massage", "Ошибка при создании объекта по ключу: " + ДанныеМаршрута.КлючОбъекта);
			Ответ.УстановитьТелоКакСтроку(Сериализация.СериализоватьJSON(СтруктураОтвета), КодировкаТекста.UTF8);
		КонецЕсли;
	
		МассивПараметровВызова = Новый Массив();

		Если ДанныеМаршрута.СодержитПараметры Тогда
			
			ЧастиМаршрутаЗапроса = СтрРазделить(Адрес, "/", Ложь);
			ЧастиНайденногоМаршрута = СтрРазделить(ДанныеМаршрута.Адрес, "/", Ложь);
			СоответствиеЧастей = Новый Соответствие();

			Для Индекс = 0 По ЧастиМаршрутаЗапроса.Количество() - 1 Цикл
				СоответствиеЧастей.Вставить(ЧастиНайденногоМаршрута[Индекс], ЧастиМаршрутаЗапроса[Индекс]);
			КонецЦикла;

			Для каждого КлючЗначение Из СоответствиеЧастей Цикл

				ДанныеПараметра = Маршруты.ДанныеЧастиМаршрутаПараметром(КлючЗначение.Ключ);

				Если ДанныеПараметра <> Неопределено Тогда
					МассивПараметровВызова.Добавить(КлючЗначение.Значение);
				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

		Если Рефлексия.МетодСуществует(ИсполняемыйОбъект, ТипЗапроса) Тогда
			Рефлексия.ВызватьМетод(ИсполняемыйОбъект, ТипЗапроса, МассивПараметровВызова);
		Иначе
			Ответ.УстановитьКодСостояния(405);
			Возврат;			
		КонецЕсли;

		// TODO: Доделать обработку маршрута до передачи в исполняемый объект

	Исключение

		СтруктураОтвета = Новый Структура("massage", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));

		Если Настройки.Получить("Приложение.РежимРазработки") Тогда
			СтруктураОтвета.Вставить("full_error", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецЕсли;
		
		ТестОшибки = Сериализация.СериализоватьJSON(СтруктураОтвета);		
		Ответ.УстановитьТипСодержимого("json");
		Ответ.УстановитьТелоКакСтроку(ТестОшибки, КодировкаТекста.UTF8);
		Ответ.УстановитьКодСостояния(500);

	КонецПопытки;

КонецПроцедуры