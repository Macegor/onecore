// BSLLS:LineLength-off
// BSLLS:MissingVariablesDescription-off
// BSLLS:NumberOfOptionalParams-off

Перем АдресСервера;
Перем ТелоЗапроса;
Перем ПараметрыСтрокиЗапроса;
Перем ЗаголовкиЗапроса;
Перем Соединение;

// Конструктор
// 
// Параметры:
//  Сервер - Строка - Адрес сервера
//  ЗащищенноеСоединение - Булево - Определяет порт (если не указан) и префикс строки запроса (по умолчанию = Ложь)
//  Порт - Число - Порт на который будет создано соединение (по умолчанию для http используется 80, для https 443)
//  ТаймаутСоединения - Число - таймаут в секундах (по умолчанию = 0)
//  Пользователь - Строка - Пользователь для доступа к серверу (по умолчанию = Неопределено)
//  Пароль - Строка - Пароль для доступа к серверу (по умолчанию = Неопределено)
//
Процедура ПриСозданииОбъекта(Сервер, ЗащищенноеСоединение = Ложь, Порт = Неопределено, ТаймаутСоединения = 0, Пользователь = Неопределено, Пароль = Неопределено)
	
	АдресСервера = Сервер;
	ЗаголовкиЗапроса = Новый Соответствие();
	ПараметрыСтрокиЗапроса = Новый Соответствие();

	Если Порт = Неопределено Тогда
		Порт = ?(ЗащищенноеСоединение, 443, 80);
	КонецЕсли;

	// Формируем соединение с сервером.
	Соединение = Новый HTTPСоединение(?(ЗащищенноеСоединение, "https://", "http://") + АдресСервера, // сервер (хост)
	Порт, // порт, по умолчанию для http используется 80, для https 443
	Пользователь, // пользователь для доступа к серверу (если он есть)
	Пароль, // пароль для доступа к серверу (если он есть)
	, // здесь указывается прокси, если он есть
	ТаймаутСоединения); // таймаут в секундах, 0 или пусто - не устанавливать

КонецПроцедуры

// Параметры строки запроса, устанавливаются в строку запроса после "?"
//
// Возвращаемое значение:
//  Соответствие - Параметры строки запроса
//
Функция ПараметрыСтрокиЗапроса() Экспорт
	Возврат ПараметрыСтрокиЗапроса;
КонецФункции

// Заголовки запроса
//
// Возвращаемое значение:
//  Соответствие - Заголовки передаваемые с запросом
//
Функция Заголовки() Экспорт
	Возврат ЗаголовкиЗапроса;
КонецФункции

// Подготавливает тело запроса перед отправкой
//
// Параметры:
//  ТипКонтента - Строка - Тип контента http, например application/json или text/html
//  ДанныеТела - Строка, ДвоичныеДанные - Данные для отправки запроса
//
Процедура УстановитьТело(ТипКонтента, ДанныеТела) Экспорт
	
	ЗаголовкиЗапроса.Вставить("Content-Type", ВебСерверСлужебное.ОпределитьТипСодержимого(ТипКонтента));
	ТелоЗапроса = ДанныеТела;

КонецПроцедуры

// Отправляет запрос по указанным параметрам
// 
// Параметры:
//  Метод - МетодыHTTP - Метод HTTP
//  АдресРесурса - Строка - Адрес без указания сервера, например: "/users" или "/" если нужен корень
//  ИмяВыходногоФайла - Неопределено, Строка - Если задан, то тело ответа будет записано в файл. В противном случае, 
//                                             тело ответа можно получить методами ПолучитьТелоКакСтроку и ПолучитьТелоКакДвоичныеДанные 
// 
// Возвращаемое значение:
//  Структура - Результат выполнения:
//		* Статус - Булево - Истина, если запрос выполнен успешно
//		* ИнформацияОбОшибке - ИнформацияОбОшибке - Заполняется если возникла ошибка в процессе выполнения запроса
//		* РезультатЗапроса - HTTPОтвет, Неопределено - Ответ от сервера или неопределено, если возникла ошибка
Функция Отправить(Знач Метод, Знач АдресРесурса, Знач ИмяВыходногоФайла = Неопределено) Экспорт
			
	// Формируем параметры запроса
	Если ТипЗнч(ПараметрыСтрокиЗапроса) = Тип("Соответствие") Тогда
		СтрокаПараметров = "?";
		Для Каждого КлючЗначение Из ПараметрыСтрокиЗапроса Цикл
			СтрокаПараметров = СтрокаПараметров + ?(СтрокаПараметров = "?", "", "&") + КлючЗначение.Ключ + "="
			+ КлючЗначение.Значение;
		КонецЦикла;
	Иначе
		СтрокаПараметров = "";
	КонецЕсли;
	
	// Создаём запрос
	Запрос = Новый HTTPЗапрос(АдресРесурса + СтрокаПараметров, ЗаголовкиЗапроса);
	
	Если ТипЗнч(ТелоЗапроса) = Тип("ДвоичныеДанные") Тогда	
		Запрос.УстановитьТелоИзДвоичныхДанных(ТелоЗапроса);
	ИначеЕсли ТипЗнч(ТелоЗапроса) = Тип("Строка") Тогда
		Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	Иначе
		Лог.Предупреждение("Не указано тело запроса");
	КонецЕсли;

	СтруктураРезультата = Новый Структура("ЗапросВыполнен, ИнформацияОбОшибке, Ответ");
	
	// Выполняем запрос
	Попытка
		СтруктураРезультата.Ответ = Соединение.ВызватьHTTPМетод(Метод, Запрос, ИмяВыходногоФайла);
		СтруктураРезультата.ЗапросВыполнен = Истина;
	Исключение
		СтруктураРезультата.ЗапросВыполнен = Ложь;
		СтруктураРезультата.ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат СтруктураРезультата;

КонецФункции