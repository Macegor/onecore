#Использовать reflector

// Номер порта, который будет прослушивать TCPСервер
Перем ПортПрослушивания;

// Объект управляющий маршрутизацией запросов
Перем Маршрутизатор;

// Создаёт экземпляр web сервера
//
// Параметры:
//   Порт - Число - Порт запуска веб сервера
//
Процедура ПриСозданииОбъекта(Порт = 5555)
	
	ПортПрослушивания = Порт;
	
КонецПроцедуры

// Выпоняет запуск web сервера и ожидает соединения, блокирует поток выполнения
//
// Параметры:
//   ФоноваяОбработка - Булево - Если Истина тогда обработка соединений будет происходить в фоновом задании
//
Процедура Запустить(ФоноваяОбработка = Истина) Экспорт
	
	Маршрутизатор = Новый Маршрутизатор();
	
	TCPСервер = Новый TCPСервер(ПортПрослушивания);
	TCPСервер.Запустить();
	
	Лог.Информация("Сервер запущен, адрес: http://127.0.0.1:" + Строка(ПортПрослушивания)); // BSLLS:UsingHardcodeNetworkAddress-off
	
	Пока Истина Цикл
		
		TCPСоединение = TCPСервер.ОжидатьСоединения();
		TCPСоединение.ТаймаутЧтения = 1;
		
		Если ФоноваяОбработка Тогда
			Параметры = Новый Массив();
			Параметры.Добавить(TCPСоединение);
			ФоновыеЗадания.Выполнить(ЭтотОбъект, "ОбработатьСоединение", Параметры);
		Иначе
			ОбработатьСоединение(TCPСоединение);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьСоединение(TCPСоединение) Экспорт
	
	Попытка
		
		Запрос = Новый ВебЗапрос(TCPСоединение);
		
		Если НЕ Запрос.ПолучитьЗаголовки().Количество() Тогда
			TCPСоединение.Закрыть();
			Возврат;
		КонецЕсли;
				
		Ответ = Маршрутизатор.ПеренаправитьВыполнение(Запрос);
		Ответ.Отправить();
		
	Исключение
		СтруктураОтвета = Новый Структура("massage", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		// Если Приложение.РежимРазработки() Тогда
		// 	СтруктураОтвета.Вставить("full_error", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		// КонецЕсли;
		
		ТестОшибки = Сериализатор.СериализоватьJSON(СтруктураОтвета);
		Ответ.УстановитьТипСодержимого("json");
		Ответ.УстановитьТелоКакСтроку(ТестОшибки, КодировкаТекста.UTF8);
		Ответ.Отправить(500);
	КонецПопытки;
	
КонецПроцедуры