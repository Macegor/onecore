#Использовать reflector

Перем Идентификатор;
Перем ДатаСоздания;
Перем ПоследняяАктивность;
Перем ВремяЖизни;
Перем Параметры;
Перем ТаблицаПредставлений;

Процедура ПриСозданииОбъекта()
	
	Идентификатор = Строка(Новый УникальныйИдентификатор());
	ДатаСоздания = ТекущаяУниверсальнаяДата();
	ПоследняяАктивность = ДатаСоздания;
	Параметры = Новый Структура();

	ВремяЖизни = 24 * 60 * 60;

	ТаблицаПредставлений = Новый ТаблицаЗначений();
	ТаблицаПредставлений.Колонки.Добавить("Идентификатор");
	ТаблицаПредставлений.Колонки.Добавить("ОбъектПредставления");
	ТаблицаПредставлений.Колонки.Добавить("ПоследняяАктивность");

	УстановкаПользовательскихПараметровСеанса();

КонецПроцедуры

Функция ПолучитьИдентификатор() Экспорт
	Возврат Идентификатор;
КонецФункции

Функция ПолучитьВремяЖизни() Экспорт
	Возврат ВремяЖизни;
КонецФункции

Процедура УстановкаПользовательскихПараметровСеанса()
	
	СтартовыйСценарий = Приложение.ПолучитьСтартовыйСценарий();
	Рефлектор = Служебное.Рефлектор();
	РефлекторОбъекта = Новый РефлекторОбъекта(СтартовыйСценарий);

	Аргументы = Новый Массив();
	Аргументы.Добавить(Новый Структура());

	Если РефлекторОбъекта.ЕстьПроцедура("ПриУстановкеПараметровСеанса", 1) Тогда
		Рефлектор.ВызватьМетод(СтартовыйСценарий, "ПриУстановкеПараметровСеанса", Аргументы);
	КонецЕсли;

	Для каждого Элемент Из Аргументы[0] Цикл
		Параметры.Вставить(Элемент.Ключ, Элемент.Значение);	
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьПредставление(Идентификатор, ОбъектПредставления) Экспорт
	
	Строка = ТаблицаПредставлений.Добавить();
	Строка.Идентификатор = Идентификатор;
	Строка.ОбъектПредставления = ОбъектПредставления;
	Строка.ПоследняяАктивность = ТекущаяДата();

КонецПроцедуры

Функция ПолучитьПредставление(Идентификатор) Экспорт

	НайденныеСтроки = ТаблицаПредставлений.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));

	Возврат ?(НайденныеСтроки.Количество(), НайденныеСтроки[0].ОбъектПредставления, Неопределено);

КонецФункции

Процедура ОбновитьАктивностьПредставления(Идентификатор) Экспорт

	НайденныеСтроки = ТаблицаПредставлений.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	
	Если НайденныеСтроки.Количество() Тогда
		НайденныеСтроки[0].ПоследняяАктивность = ТекущаяДата();
	КонецЕсли;

КонецПроцедуры